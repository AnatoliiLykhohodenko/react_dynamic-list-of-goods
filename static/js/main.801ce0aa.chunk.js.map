{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","App","useState","preparedGoods","setPreparedGoods","errorMessage","setErrorMessage","onLoad","useMemo","catch","err","onLoadFirstFive","sort","good1","good2","localeCompare","splice","onLoadRedOnes","filter","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICCMC,EAAgB,WAC3B,MAA0CC,mBAAiB,IAA3D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAASC,mBAAQ,kBAAM,kBAAMZ,IAChCE,KAAKM,GACLK,OAAM,SAAAC,GAAG,OAAIJ,EAAgBI,SAChC,IAEMC,EAAkBH,mBAAQ,kBAAM,kBDT/BZ,IACJE,MAAK,SAAAT,GAKJ,OAJwBA,EACrBuB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMnB,KAAKqB,cAAcD,EAAMpB,SACtDsB,OAAO,EAAG,MCMdlB,KAAKM,GACLK,OAAM,SAAAC,GAAG,OAAIJ,EAAgBI,SAChC,IAEMO,EAAgBT,mBAAQ,kBAAM,kBDH7BZ,IACJE,MAAK,SAAAT,GAGJ,OAFwBA,EAAM6B,QAAO,SAAA3B,GAAI,MAAmB,QAAfA,EAAKE,YCEnDK,KAAKM,GACLK,OAAM,SAAAC,GAAG,OAAIJ,EAAgBI,SAChC,IAEA,OACE,sBAAKS,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASd,EAHX,4BAQA,wBACEa,KAAK,SACL,UAAQ,oBACRC,QAASV,EAHX,gCAQA,wBACES,KAAK,SACL,UAAQ,aACRC,QAASJ,EAHX,4BAQCZ,EAEG,4BAAIA,IAEJ,cAAC,EAAD,CAAWhB,MAAOc,QC3D5BmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.801ce0aa.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      const normalizedGoods = goods\n        .sort((good1, good2) => good1.name.localeCompare(good2.name))\n        .splice(0, 5);\n\n      return normalizedGoods;\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      const normalizedGoods = goods.filter(good => good.color === 'red');\n\n      return normalizedGoods;\n    });\n};\n","/* eslint-disable max-len */\n/* eslint-disable implicit-arrow-linebreak */\nimport React, { useMemo, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [preparedGoods, setPreparedGoods] = useState<Good[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onLoad = useMemo(() => () => getAll()\n    .then(setPreparedGoods)\n    .catch(err => setErrorMessage(err)),\n  []);\n\n  const onLoadFirstFive = useMemo(() => () => get5First()\n    .then(setPreparedGoods)\n    .catch(err => setErrorMessage(err)),\n  []);\n\n  const onLoadRedOnes = useMemo(() => () => getRedGoods()\n    .then(setPreparedGoods)\n    .catch(err => setErrorMessage(err)),\n  []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={onLoad}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={onLoadFirstFive}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={onLoadRedOnes}\n      >\n        Load red goods\n      </button>\n\n      {errorMessage\n        ? (\n          <p>{errorMessage}</p>\n        ) : (\n          <GoodsList goods={preparedGoods} />\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}